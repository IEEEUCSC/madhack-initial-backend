{
  "openapi": "3.0.0",
  "info": {
    "title": "MADHack Agon API",
    "description": "MADHack Initial Round API Documentation",
    "contact": {
      "email": "ucscieee@gmail.com"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://agon.madhack.ucscieee.com/api",
      "description": "MADHack Server"
    },
    {
      "url": "http://localhost:3001/api",
      "description": "Local Server"
    }
  ],
  "security": [
    {
      "BearerAuth": []
    },
    {
      "ApiKeyAuth": []
    }
  ],
  "tags": [
    {
      "name": "auth",
      "description": "User authentication"
    },
    {
      "name": "user",
      "description": "User management"
    },
    {
      "name": "todo",
      "description": "Todo management"
    },
    {
      "name": "category",
      "description": "Category management"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "description": "Welcome message",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_200_object"
                },
                "examples": {
                  "welcome-message": {
                    "value": {
                      "message": "Welcome to the MADHack Agon API"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_401_object"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "provides user login functionality",
        "description": "Logs in a user and returns a JWT",
        "operationId": "loginUser",
        "requestBody": {
          "description": "User auth details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/auth_login_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_200_object"
                },
                "example": {
                  "message": "User logged in successfully",
                  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI0RTgyMzc3NS05MTBBLTQ4MTEtQTU5NC0wOUI5NTY4MTVGQzEiLCJpYXQiOjE2NzY4ODU4OTAsImV4cCI6MTY3Njg4OTQ5MH0.zgyInY2jeK0MLn8ZWJRKO_ErcZUjzgc3UNRsBXvBRhA"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_400_object"
                },
                "example": {
                  "error": "fieldName is required"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_401_object"
                },
                "examples": {
                  "invalid-credentials": {
                    "value": {
                      "error": "Invalid credentials"
                    }
                  },
                  "invalid-token": {
                    "value": {
                      "error": "API access denied! No team access token provided"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_500_object"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "provides user register functionality",
        "description": "Registers a user",
        "operationId": "registerUser",
        "requestBody": {
          "description": "User auth details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppUser"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_201_object"
                },
                "example": {
                  "message": "User registered successfully"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_400_object"
                },
                "example": {
                  "error": "fieldName is required"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_401_object"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_409_object"
                },
                "example": {
                  "error": "User already exists"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_500_object"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/user": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "retrieves user details",
        "description": "Gets details of logged in user",
        "operationId": "getUser",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppUser"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_400_object"
                },
                "example": {
                  "error": "fieldName is required"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_401_object"
                },
                "example": {
                  "error": "No auth token provided"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "updates user details",
        "description": "Updates details of logged in user",
        "operationId": "updateUser",
        "requestBody": {
          "description": "User details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_200_object"
                },
                "example": {
                  "message": "User updated successfully"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_400_object"
                },
                "example": {
                  "error": "fieldName is required"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_401_object"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_500_object"
                },
                "examples": {
                  "internal-error": {
                    "value": {
                      "error": "Internal Server Error"
                    }
                  },
                  "update-error": {
                    "value": {
                      "error": "Error updating user"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "deletes user",
        "description": "Deletes logged in user",
        "operationId": "deleteUser",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_200_object"
                },
                "example": {
                  "message": "User deleted successfully"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_401_object"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_500_object"
                },
                "examples": {
                  "internal-error": {
                    "value": {
                      "error": "Internal Server Error"
                    }
                  },
                  "delete-error": {
                    "value": {
                      "error": "Error deleting user"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/user/upload-avatar": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "uploads user avatars",
        "description": "Uploads images to server with multipart form dst",
        "operationId": "uploadAvatar",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/user_upload_avatar_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_200_object"
                },
                "example": {
                  "message": "Avatar uploaded successfully"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_400_object"
                },
                "example": {
                  "error": "No avatar Uploaded"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_401_object"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_500_object"
                },
                "examples": {
                  "internal-error": {
                    "value": {
                      "error": "Internal Server Error"
                    }
                  },
                  "upload-error": {
                    "value": {
                      "error": "Error uploading avatar"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/todo": {
      "get": {
        "tags": [
          "todo"
        ],
        "summary": "retrieves todo list",
        "description": "Gets todo list of logged in user",
        "operationId": "getTodoList",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfTodos"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_401_object"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_500_object"
                },
                "examples": {
                  "internal-error": {
                    "value": {
                      "error": "Internal Server Error"
                    }
                  },
                  "get-error": {
                    "value": {
                      "error": "Error getting todo list"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "todo"
        ],
        "summary": "creates a todo",
        "description": "Creates a todo",
        "operationId": "createTodo",
        "requestBody": {
          "description": "Todo details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Todo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_200_object"
                },
                "example": {
                  "message": "Todo created successfully"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_400_object"
                },
                "example": {
                  "error": "fieldName is required"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_401_object"
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "error": "No auth token provided"
                    }
                  },
                  "invalid-token": {
                    "value": {
                      "error": "API access denied! No team access token provided"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_500_object"
                },
                "examples": {
                  "internal-error": {
                    "value": {
                      "error": "Internal Server Error"
                    }
                  },
                  "create-error": {
                    "value": {
                      "error": "Error creating todo"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/todo/{todoId}": {
      "parameters": [
        {
          "name": "todoId",
          "in": "path",
          "description": "ID of todo to return",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "tags": [
          "todo"
        ],
        "summary": "retrieves todo list",
        "description": "Gets todo list of logged in user",
        "operationId": "getTodo",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Todo"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "todo"
        ],
        "summary": "updates a todo",
        "description": "Updates a todo",
        "operationId": "updateTodo",
        "requestBody": {
          "description": "Todo details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TodoEdit"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_200_object"
                },
                "example": {
                  "message": "Todo updated successfully"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_400_object"
                },
                "example": {
                  "error": "fieldName is required"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_401_object"
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "error": "No auth token provided"
                    }
                  },
                  "invalid-token": {
                    "value": {
                      "error": "API access denied! No team access token provided"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_500_object"
                },
                "examples": {
                  "internal-error": {
                    "value": {
                      "error": "Internal Server Error"
                    }
                  },
                  "update-error": {
                    "value": {
                      "error": "Error updating todo"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "todo"
        ],
        "summary": "deletes a todo",
        "description": "Deletes a todo",
        "operationId": "deleteTodo",
        "requestBody": {
          "description": "Todo details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Todo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_200_object"
                },
                "example": {
                  "message": "Todo deleted successfully"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_401_object"
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "error": "No auth token provided"
                    }
                  },
                  "invalid-token": {
                    "value": {
                      "error": "API access denied! No team access token provided"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_500_object"
                },
                "examples": {
                  "internal-error": {
                    "value": {
                      "error": "Internal Server Error"
                    }
                  },
                  "delete-error": {
                    "value": {
                      "error": "Error deleting todo"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/category": {
      "get": {
        "tags": [
          "category"
        ],
        "summary": "retrieves category list",
        "description": "Gets category list of logged in user",
        "operationId": "getCategoryList",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_401_object"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_500_object"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AppUser": {
        "required": [
          "contactNo",
          "email",
          "firstName",
          "lastName",
          "userId"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid",
            "example": "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "Doe"
          },
          "email": {
            "type": "string",
            "example": "johndoe@example.com"
          },
          "contactNo": {
            "type": "string",
            "example": "0712345678"
          }
        },
        "description": "A user of the mobile application"
      },
      "Category": {
        "required": [
          "categoryId",
          "categoryName"
        ],
        "type": "object",
        "properties": {
          "categoryId": {
            "type": "string",
            "format": "uuid",
            "example": "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "categoryName": {
            "type": "string",
            "example": "Work"
          }
        }
      },
      "ListOfTodos": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Todo"
        }
      },
      "Todo": {
        "required": [
          "categoryId",
          "createdDt",
          "dueDt",
          "isComplete",
          "lastModifiedDt",
          "notes",
          "title",
          "todoId",
          "userId"
        ],
        "type": "object",
        "properties": {
          "todoId": {
            "type": "string",
            "format": "uuid",
            "example": "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "title": {
            "type": "string",
            "example": "Buy Milk"
          },
          "notes": {
            "type": "string",
            "example": "Buy 2L of milk"
          },
          "createdDt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-02-25T10:00:00Z"
          },
          "dueDt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-02-25T10:00:00Z"
          },
          "isComplete": {
            "type": "boolean",
            "example": false
          },
          "lastModifiedDt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-02-25T10:00:00Z"
          },
          "userId": {
            "type": "string",
            "format": "uuid",
            "example": "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "categoryId": {
            "type": "string",
            "format": "uuid",
            "example": "064596AB-85CE-4107-B390-2E3989F7EF40"
          }
        }
      },
      "TodoEdit": {
        "required": [
          "categoryId",
          "createdDt",
          "dueDt",
          "isComplete",
          "lastModifiedDt",
          "notes",
          "title",
          "userId"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Buy Milk"
          },
          "notes": {
            "type": "string",
            "example": "Buy 2L of milk"
          },
          "createdDt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-02-25T10:00:00Z"
          },
          "dueDt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-02-25T10:00:00Z"
          },
          "isComplete": {
            "type": "boolean",
            "example": false
          },
          "lastModifiedDt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-02-25T10:00:00Z"
          },
          "userId": {
            "type": "string",
            "format": "uuid",
            "example": "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "categoryId": {
            "type": "string",
            "format": "uuid",
            "example": "064596AB-85CE-4107-B390-2E3989F7EF40"
          }
        }
      },
      "response_200_object": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "response_201_object": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Object created successfully"
          }
        }
      },
      "response_401_object": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "API access denied! No team access token provided"
          }
        }
      },
      "response_400_object": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "Bad Request"
          }
        }
      },
      "response_409_object": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "Conflict"
          }
        }
      },
      "response_500_object": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "Internal Server Error"
          }
        }
      },
      "auth_login_body": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "johndoe@example.com"
          },
          "password": {
            "type": "string",
            "example": "password"
          }
        }
      },
      "user_upload_avatar_body": {
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "format": "binary"
          }
        }
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "ApiKeyAuth": {
        "type": "apiKey",
        "name": "X-API-Key",
        "in": "header"
      }
    }
  }
}